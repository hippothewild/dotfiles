#!/bin/bash

set -ex

printmsg() {
  echo -e "\033[1;34m$1\033[0m"
}

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

printmsg "*** Check prerequisite ***"
if test ! "$(which tar)"; then
  echo 'Install tar/gz to continue.'
  exit 1
fi
if test ! "$(which curl)"; then
  echo 'Install curl to continue.'
  exit 1
fi
if test ! "$(which git)"; then
  echo 'Install git to continue.'
  exit 1
fi

DOTFILE_DIR=$(pwd)

printmsg "*** Install HomeBrew ***"
if [[ $(command -v /opt/homebrew/bin/brew) == "" ]]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  printmsg "Homebrew is already installed, updating..."
  /opt/homebrew/bin/brew update
fi

printmsg "*** Install binaries and applications via Homebrew ***"
export PATH="$PATH:/opt/homebrew/bin"
brew update
brew tap homebrew/bundle
brew bundle --file="$DOTFILE_DIR"/Brewfile
brew cleanup

# Install dockutil from source https://github.com/kcrawford/dockutil/issues/127 has fixed
printmsg "*** Install dockutils from source (https://github.com/kcrawford/dockutil/issues/127) ***"
DOCKUTIL_URL=$(curl --silent "https://api.github.com/repos/kcrawford/dockutil/releases/latest" | jq -r .assets[].browser_download_url | grep pkg)
curl -sL "${DOCKUTIL_URL}" -o /tmp/dockutil.pkg
sudo installer -pkg "/tmp/dockutil.pkg" -target /
rm /tmp/dockutil.pkg

printmsg "*** Set macOS system configurations ***"
sh .macos

printmsg "*** Set git configurations ***"
[ ! -f "$HOME"/.gitconfig ] && ln -nfs "$DOTFILE_DIR"/.gitconfig "$HOME"/.gitconfig
[ ! -f "$HOME"/.gitconfig-vessl ] && ln -nfs "$DOTFILE_DIR"/.gitconfig-vessl "$HOME"/.gitconfig-vessl


printmsg "*** Change default shell to zsh, install oh-my-zsh and set configuration ***"
which zsh | sudo tee -a /etc/shells
chsh -s "$(which zsh)"
if [ -d ~/.oh-my-zsh ]; then
  printmsg "oh-my-zsh has already installed"
else
  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi
if [ -f "$HOME"/.zshrc ]; then
  cp "$HOME"/.zshrc "$HOME"/.zshrc.backup
fi
ln -nfs "$DOTFILE_DIR"/.zshrc "$HOME"/.zshrc

printmsg "*** Install Visual Studio Code extensions ***"
if test "$(which code)"; then
  for ext in arcanis.vscode-zipfs \
      dbaeumer.vscode-eslint \
      eamodio.gitlens \
      esbenp.prettier-vscode \
      GitHub.copilot \
      GitHub.vscode-pull-request-github \
      golang.go \
      hashicorp.terraform \
      James-Yu.latex-workshop \
      ms-python.python \
      ms-vscode-remote.remote-ssh \
      ms-vscode-remote.remote-ssh-edit \
      timonwong.shellcheck; do
    code --install-extension $ext
  done
  if [ -f "$HOME"/Library/Application\ Support/Code/User/settings.json ]; then
    cp "$HOME"/Library/Application\ Support/Code/User/settings.json "$HOME"/Library/Application\ Support/Code/User/settings.json.backup
  fi
  ln -nfs "$DOTFILE_DIR"/vscode_settings.json "$HOME"/Library/Application\ Support/Code/User/settings.json
fi


printmsg "*** Copy editor & terminal configurations ***"
defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$DOTFILE_DIR/iterm"
defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
if [ -f "$HOME"/.vimrc ]; then
  cp "$HOME"/.vimrc "$HOME"/.vimrc.backup
fi
ln -nfs "$DOTFILE_DIR"/.vimrc "$HOME"/.vimrc


printmsg "All dotfiles setup completed!\nPlease logout/login to apply some system configurations."
